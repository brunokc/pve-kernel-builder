name: Check version on new pve-kernel releases

on:
  workflow_dispatch:
  schedule:
    - cron: '45 2 * * *' # Every day at 2:45AM UTC

env:
  DEBIAN_FRONTEND: noninteractive

jobs:
  check:
    name: Check for new release
    runs-on: ubuntu-latest
    strategy:
      #max-parallel: 1
      matrix:
        branch: ['master', 'pve-kernel-5.15']
    #if: github.event.repository.owner.id == github.event.sender.id
    permissions:
      contents: write

    steps:
    - name: Checkout Sources
      uses: actions/checkout@main

    - name: Initialization environment
      run: |
        sudo -E apt-get update
        sudo -E apt install -y curl

    - name: Check for updates
      id: check-version
      run: |
        config_path='${{ github.workspace }}/config/${{ matrix.branch }}/version'
        cur_ver=""
        if [[ -e ${config_path} ]]; then
            cur_ver=`yq .version.kernel ${config_path}`
        fi
        echo "Current cached kernel version for branch ${{ matrix.branch }}: ${cur_ver}"
        proxmox_ver=`curl -s "https://git.proxmox.com/?p=pve-kernel-meta.git;a=shortlog;h=refs/heads/master" | \
            grep -oP "bump version to \K[^<]*" | head -n 1`
        url="https://git.proxmox.com/?p=pve-kernel.git;a=shortlog;h=refs/heads/${{ matrix.branch }}"
        payload=`wget $url -qO shortlog.html`
        ver=`grep -oP "bump version to \K[^<,]+" shortlog.html | head -n 1`
        abi_ver=`grep -oP "update ABI file for \K[^<,]+" shortlog.html | head -n 1`
        kernel_ver="pve-kernel-${abi_ver}-${ver}"
        if [[ ${kernel_ver} == ${cur_ver} ]]; then
            echo "Kernel version ${kernel_ver} for branch ${{ matrix.branch }} is up to date. Nothing to do."
            echo "status=up-to-date" >> $GITHUB_OUTPUT
        else
            echo "New kernel version avaiable for branch ${{ matrix.branch }}: ${kernel_ver}. Will update repository."
            mkdir -p `dirname ${config_path}`
            sudo echo -e "version:\n  proxmox: ${proxmox_ver}\n  kernel: ${abi_ver}" > ${config_path}
            echo "version=${kernel_ver}" >> $GITHUB_OUTPUT
            echo "status=needs-update" >> $GITHUB_OUTPUT
        fi
        rm -f shortlog.html

    - name: Commit and Push changes
      continue-on-error: true
      if: steps.check-version.outputs.status == 'needs-update'
      run: |
        git config --local user.email "1355373+brunokc@users.noreply.github.com"
        git config --local user.name "Bruno Kraychete da Costa"
        git pull
        git add config/**
        git commit -m 'Update version to ${{ steps.update.outputs.version }}'
        git push
